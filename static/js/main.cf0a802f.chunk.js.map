{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchField.js","components/Button.js","containers/GuessTheTopic.js","components/Flag.js","containers/GuessFlag.js","img/github.svg","img/fb.png","img/insta.png","img/twitter.png","constants.js","containers/App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["Card","img","name","region","capital","languages","population","className","style","boxShadow","backgroundColor","backdropFilter","alt","src","CardList","countries","map","country","i","item","toString","console","log","flag","length","SearchField","onValueEntered","value","width","type","placeholder","onChange","Button","bgColor","color","text","textSize","onClick","borderStyle","GuessTheTopic","props","handleClickPlay","topic","state","play","setState","buttonPlayValue","handleKeyDown","event","key","keyCode","guessEntered","readOnly","disabled","sendComponentScore","handleOkButton","onGuessEntered","guess","target","wrongGuess","handleGiveUp","giveUp","newCountry","array","randomElement","Math","floor","random","toLowerCase","addScore","this","onKeyDown","Component","Flag","randomCountry","backgroundImage","backgroundSize","backgroundPosition","display","fontSize","arrayOf3","newPick","handleMouseClick","answer","picturesDisplay","randomFlagArray","forEach","flagsDisplay","wrongAnswer","playAgain","randomArrayOf3","CHANGE_SEARCH_FIELD","PLAY","SHOW_CARDS","GENERAL_SCORE","REQUEST_COUNTRIES_PENDING","REQUEST_COUNTRIES_SUCCESS","REQUEST_COUNTRIES_FAILED","connect","searchedCountry","searchCountries","playButton","showCards","showCardsButton","requestCountries","isPending","error","dispatch","payload","handlePlayButton","handleShowCards","onRequestCountries","fetch","then","response","json","data","catch","useState","generalScore","setGeneralScore","useEffect","updateScore","componentScore","filteredCountries","filter","includes","Object","keys","GuessFlag","href","rel","height","github","margin","fb","twitter","insta","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateCountries","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPA2BeA,EAzBF,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,IAAKC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,WACnD,OACI,sBACIC,UAAW,oCACXC,MAAO,CACHC,UAAW,+BACXC,gBAAiB,2BACjBC,eAAgB,aALxB,UAQI,qBACIJ,UAAW,+BACXK,IAAI,OACJC,IAAKZ,IAET,oBAAIM,UAAW,KAAf,SAAsBL,IACtB,oBAAIK,UAAU,2BACd,0CAAaJ,KACb,2CAAcC,KACd,4CAAeC,KACf,6CAAgBC,EAAhB,iBCGGQ,EAtBE,SAAC,GAEd,OAFgC,EAAhBC,UAGFC,KAAI,SAACC,EAASC,GACpB,IAAMb,EAAYY,EAAQZ,UAAUW,KAAI,SAAAG,GAAI,MAAI,IAAMA,EAAKjB,QAAMkB,WAErE,OADIC,QAAQC,IAAI,YAAajB,GAEzB,qBAAKE,UAAW,UAAhB,SACI,cAAC,EAAD,CACAN,IAAKgB,EAAQM,KACbrB,KAAMe,EAAQf,KACdC,OAAQc,EAAQd,OAChBC,QAAoC,IAA3Ba,EAAQb,QAAQoB,OAAc,MAAQP,EAAQb,QACvDC,UAAWA,EACXC,WAAYW,EAAQX,cAPQY,OCQ7BO,EAhBK,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,eAAgBC,EAAY,EAAZA,MACnC,OACI,qBAAKpB,UAAW,SAAhB,SAEI,uBACIA,UAAW,gBACXC,MAAO,CAACoB,MAAO,SACfC,KAAK,OACLC,YAAY,mCACZC,SAAYL,EACZC,MAASA,O,4BCKVK,EAfA,SAAC,GAAsD,IAArDC,EAAoD,EAApDA,QAASC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,SAAUR,EAAoB,EAApBA,MAAOS,EAAa,EAAbA,QACpD,OACI,wBACI9B,UAAW,wDAA0D2B,EAAQ,IAAME,EAC3E5B,MAAO,CACHE,gBAAiBuB,EACjBK,YAAa,OACbV,MAAOA,GAEnBS,QAAWA,EAPf,SAQIF,KC6LGI,E,kDApMX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAqBRC,gBAAkB,WAAO,IACfC,EAAU,EAAKF,MAAfE,MACH,EAAKC,MAAMC,KAOZ,EAAKC,SAAS,CACVD,MAAM,EACNE,gBAAgB,aAAD,OAAeJ,KARlC,EAAKG,SAAS,CACVD,MAAM,EACNE,gBAAgB,oBAAD,OAAsBJ,EAAtB,QA3BR,EAsCjBK,cAAgB,SAACC,GACG,UAAdA,EAAMC,KAAqC,KAAlBD,EAAME,UAC/B,EAAKL,SAAU,CAACM,cAAc,EAAMC,UAAU,EAAMC,UAAU,IAC9D,EAAKC,uBAzCM,EA6CjBC,eAAiB,SAACP,GAChB,EAAKH,SAAU,CAACM,cAAc,EAAMC,UAAU,EAAMC,UAAU,IAC9D,EAAKC,sBA/CU,EAkDjBE,eAAiB,SAACR,GACZ,EAAKH,SAAU,CAACY,MAAOT,EAAMU,OAAO/B,SAnDzB,EAuDjBgC,WAAa,WACX,EAAKd,SAAU,CAACM,cAAc,EAAOM,MAAO,GAAIJ,UAAU,EAAOD,UAAU,KAxD5D,EA2DjBQ,aAAe,WACP,EAAKjB,MAAMkB,OACX,EAAKhB,SAAS,CAACgB,QAAQ,IAEzB,EAAKhB,SAAS,CAACgB,QAAQ,KA/DZ,EAmEjBC,WAAa,SAACC,GACZ,EAAKlB,SAAU,CACXM,cAAc,EACdM,MAAO,GACPL,UAAU,EACVC,UAAU,EACVW,cAAeD,EAAME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMvC,YAzE3C,EA8EjB8B,mBAAqB,WAChB,EAAKX,MAAMc,MAAMW,gBAAgB,EAAKzB,MAAMqB,cAAc,EAAKxB,MAAME,OAAO0B,cACvE,EAAK5B,MAAM6B,UAAS,GAEpB,EAAK7B,MAAM6B,UAAS,IAhF5B,EAAK1B,MAAQ,CACTqB,cAAe,GACfpB,MAAM,EACNa,MAAO,GACPN,cAAc,EACdL,gBAAiB,GACjBM,UAAU,EACVC,UAAU,EACVQ,QAAQ,GAVG,E,gEAcI,IAAD,EACWS,KAAK9B,MAA1BzB,EADU,EACVA,UAAW2B,EADD,EACCA,MACjB4B,KAAKzB,SAAS,CACVmB,cAAejD,EAAUkD,KAAKC,MAAMD,KAAKE,SAAWpD,EAAUS,SAC9DsB,gBAAgB,aAAD,OAAeJ,O,+BAoE9B,IAAD,SACuB4B,KAAK9B,MAA1BzB,EADF,EACEA,UAAW2B,EADb,EACaA,MADb,EAWD4B,KAAK3B,MARNqB,EAHE,EAGFA,cACApB,EAJE,EAIFA,KACAa,EALE,EAKFA,MACAN,EANE,EAMFA,aACAL,EAPE,EAOFA,gBACAM,EARE,EAQFA,SACAC,EATE,EASFA,SACAQ,EAVE,EAUFA,OAEH,OACI,sBAAKtD,UAAW,SAAhB,UACI,cAAC,EAAD,CACI0B,QAAS,UACTE,KAAMW,EACNV,SAAU,KACVR,MAAO,QACPS,QAAWiC,KAAK7B,kBAGhBG,EACA,gCACI,qBAAKrC,UAAW,kCAAhB,SACI,qBAAIA,UAAW,gBAAf,UAAgC,sBAAMA,UAAW,MAAjB,SAAyBmC,IAAzD,OAA0E,sBAAMnC,UAAW,YAAjB,SAA+ByD,EAAc9D,OAAvH,SAEJ,uBACIK,UAAW,oBACXC,MAAO,CAACoB,MAAO,SACfC,KAAK,OACLC,YAAY,yBACZC,SAAYuC,KAAKd,eACjBe,UAAaD,KAAKvB,cAClBpB,MAAS8B,EACTL,SAAYA,EACZC,SAAYA,IAEhB,cAAC,EAAD,CACIpB,QAAS,UACTE,KAAI,KACJD,MAAO,YACPE,SAAU,OACVC,QAAW,kBAAM,EAAKkB,oBAE1B,cAAC,EAAD,CACItB,QAAS,UACTE,KAAI,iBACJD,MAAO,QACPE,SAAU,OACVC,QAAW,kBAAM,EAAKyB,WAAW/C,MAGjCoC,EACKM,EAAMW,gBAAgBJ,EAActB,GAAO0B,cACxC,sBAAK7D,UAAW,kCAAhB,UACI,oBAAIA,UAAW,YAAf,kCACA,cAAC,EAAD,CACQ0B,QAAS,UACTE,KAAI,cACJD,MAAO,QACPE,SAAU,OACVC,QAAW,kBAAM,EAAKyB,WAAW/C,SAI7C,gCACI,sBAAKR,UAAW,sBAAhB,UACI,cAAC,EAAD,CACI0B,QAAS,UACTE,KAAI,aACJD,MAAO,QACPE,SAAU,OACVC,QAAWiC,KAAKX,aAEpB,cAAC,EAAD,CACI1B,QAAS,UACTE,KAAI,UACJD,MAAO,YACPE,SAAU,OACVC,QAAWiC,KAAKV,kBAGnBC,EACG,sBAAKtD,UAAW,kCAAhB,UACI,qBAAIA,UAAW,YAAf,iBAAiCmC,EAAjC,OAA4CsB,EAAc9D,KAA1D,OAAoE8D,EAActB,GAAlF,OACA,cAAC,EAAD,CACIT,QAAS,UACTE,KAAI,cACJD,MAAO,QACPE,SAAU,KACVC,QAAW,kBAAM,EAAKyB,WAAW/C,SAGxC,2BAIf,uCAId,+B,GA9LQyD,aCoBbC,EArBF,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,cAAerB,EAAuB,EAAvBA,SAAUhB,EAAa,EAAbA,QACpC,OACI,wBACI9B,UAAW,iCACXC,MAAO,CACHmE,gBAAgB,OAAD,OAASD,EAAT,KACfE,eAAgB,QAChBC,mBAAoB,SACpBC,QAAS,eACTlD,MAAO,QACPM,MAAO,mBACP6C,SAAU,OAEV1C,QAAWA,EACXgB,SAAUA,EAZlB,mBC+MOd,E,kDA7MX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAwBRC,gBAAkB,SAACuC,GACZ,EAAKrC,MAAMC,KAOZ,EAAKC,SAAS,CACVD,MAAM,EACNE,gBAAgB,mBARpB,EAAKD,SAAS,CACVD,MAAM,EACNoB,cAAegB,EAASf,KAAKC,MAAMD,KAAKE,SAAWa,EAASxD,SAC5DsB,gBAAgB,4BA9BT,EAwCjBmC,QAAU,SAACD,GACT,EAAKnC,SAAS,CACVD,MAAM,EACNoB,cAAegB,EAASf,KAAKC,MAAMD,KAAKE,SAAWa,EAASxD,SAC5D6B,UAAU,KA5CC,EAgDjB6B,iBAAmB,SAACC,GACd,EAAKtC,SAAU,CAACY,MAAO0B,IACvB,EAAK7B,mBAAmB6B,EAAO5D,OAlDpB,EAqDjB6D,gBAAkB,SAACrB,GAEjB,IAAMsB,EAAkB,GAExBA,EAAgB,GAAKtB,EAAME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMvC,SAE5DuC,EAAMuB,SAAQ,SAAAnE,GACNA,IAASkE,EAAgB,KACzBA,EAAgB,GAAKlE,MAI7B4C,EAAMuB,SAAQ,SAAAnE,GACNA,IAASkE,EAAgB,IAAMlE,IAASkE,EAAgB,KACxDA,EAAgB,GAAKlE,MAGzB,EAAK0B,SAAU,CAAC0C,aAAcF,KAtEnB,EAyEfG,YAAc,WACV,EAAK3C,SAAS,CAACY,MAAO,GAAIJ,UAAU,KA1EzB,EA6EjBoC,UAAY,SAAC1E,GACX,EAAK8B,SAAS,CACV6C,eAAgB,CAAC3E,EAAUkD,KAAKC,MAAMD,KAAKE,SAAWpD,EAAUS,SAChDT,EAAUkD,KAAKC,MAAMD,KAAKE,SAAWpD,EAAUS,SAC/CT,EAAUkD,KAAKC,MAAMD,KAAKE,SAAWpD,EAAUS,UAC/DiC,MAAO,GACPJ,UAAU,KAnFC,EAuFjBC,mBAAqB,SAAC6B,GAClB9D,QAAQC,IAAI,UAAW6D,EAAQ,EAAKxC,MAAMqB,cAAczC,MAC1D,EAAKsB,SAAS,CAACQ,UAAU,IACrB8B,IAAS,EAAKxC,MAAMqB,cAAczC,KAC7B,EAAKiB,MAAM6B,UAAS,GAEpB,EAAK7B,MAAM6B,UAAS,IA3F7B,EAAK1B,MAAQ,CACT+C,eAAgB,GAChB1B,cAAe,GACfpB,MAAM,EACNa,MAAO,GACP8B,aAAc,GACdpC,cAAc,EACdL,gBAAiB,GACjBO,UAAU,GAVC,E,gEAcK,IAEZtC,EAAcuD,KAAK9B,MAAnBzB,UACRuD,KAAKzB,SAAS,CACV6C,eAAgB,CAAC3E,EAAUkD,KAAKC,MAAMD,KAAKE,SAAWpD,EAAUS,SAChDT,EAAUkD,KAAKC,MAAMD,KAAKE,SAAWpD,EAAUS,SAC/CT,EAAUkD,KAAKC,MAAMD,KAAKE,SAAWpD,EAAUS,UAC/DsB,gBAAgB,qB,+BA4Ed,IAAD,OACE/B,EAAcuD,KAAK9B,MAAnBzB,UADF,EAUDuD,KAAK3B,MAPNqB,EAHE,EAGFA,cACApB,EAJE,EAIFA,KACAa,EALE,EAKFA,MACAiC,EANE,EAMFA,eACAH,EAPE,EAOFA,aACAzC,EARE,EAQFA,gBACAO,EATE,EASFA,SAIH,OAFDhC,QAAQC,IAAI,qBAAsBoE,GAG7B,sBAAKnF,UAAW,SAAhB,UACI,cAAC,EAAD,CACI0B,QAAS,UACTE,KAAMW,EACNV,SAAU,KACVR,MAAO,QACPS,QAAU,WAAO,EAAKI,gBAAgBiD,GAAiB,EAAKN,gBAAgBM,MAc5E9C,EACA,gCACI,qBAAIrC,UAAW,YAAf,qBAAoC,uBAAMA,UAAW,YAAjB,UAA+ByD,EAAc9D,KAA7C,UACpC,sBAAKK,UAAW,MAAhB,UACI,cAAC,EAAD,CACImE,cAAea,EAAa,GAAGhE,KAC/Bc,QAAW,kBAAM,EAAK6C,iBAAiBK,EAAa,KACpDlC,SAAUA,IAEd,cAAC,EAAD,CACIqB,cAAea,EAAa,GAAGhE,KAC/Bc,QAAW,kBAAM,EAAK6C,iBAAiBK,EAAa,KACpDlC,SAAUA,IAEd,cAAC,EAAD,CACIqB,cAAea,EAAa,GAAGhE,KAC/Bc,QAAW,kBAAM,EAAK6C,iBAAiBK,EAAa,KACpDlC,SAAUA,IAEd,8BACA,cAAC,EAAD,CACIpB,QAAS,UACTC,MAAO,QACPC,KAAI,qBACJC,SAAU,KACVC,QAAW,WACP,EAAKoD,UAAU1E,GACf,EAAKkE,QAAQS,GACb,EAAKN,gBAAgBM,WAM7BjC,EACKA,EAAMlC,OAAOyC,EAAczC,KACxB,sBAAKhB,UAAW,kCAAhB,UACI,oBAAIA,UAAW,WAAf,kCACA,cAAC,EAAD,CACI0B,QAAS,UACTE,KAAI,aACJD,MAAO,QACPE,SAAU,KACVC,QAAW,WACP,EAAKoD,UAAU1E,GACf,EAAKkE,QAAQS,GACb,EAAKN,gBAAgBM,SAKjC,sBAAKnF,UAAW,kCAAhB,UACQ,qBAAIA,UAAW,aAAf,6CAA6D,uBAAMA,UAAW,YAAjB,UAA+BkD,EAAMvD,KAArC,UAC7D,cAAC,EAAD,CACI+B,QAAS,UACTE,KAAI,YACJD,MAAO,QACPE,SAAU,KACVC,QAAWiC,KAAKkB,iBAG9B,2BAId,+B,GAtMQhB,aCJb,MAA0B,mCCA1B,MAA0B,+BCA1B,MAA0B,kCCA1B,MAA0B,oCCA5BmB,G,MAAsB,uBACtBC,EAAO,OACPC,EAAa,aACbC,EAAgB,gBAChBC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAA2B,2BCiLzBC,mBAtKS,SAACvD,GACvB,MAAO,CACLwD,gBAAiBxD,EAAMyD,gBAAgBD,gBACvCvD,KAAMD,EAAMyD,gBAAgBxD,KAC5ByD,WAAY1D,EAAMyD,gBAAgBC,WAClCC,UAAW3D,EAAMyD,gBAAgBE,UACjCC,gBAAiB5D,EAAMyD,gBAAgBG,gBAEvCxF,UAAW4B,EAAM6D,iBAAiBzF,UAClC0F,UAAW9D,EAAM6D,iBAAiBC,UAClCC,MAAO/D,EAAM6D,iBAAiBE,UAIP,SAACC,GAC1B,MAAO,CACLjF,eAAgB,SAACsB,GAAD,OAAW2D,GCvBIxE,EDuBwBa,EAAMU,OAAO/B,MCvB3B,CACzCE,KAAM8D,EACNiB,QAASzE,KAFqB,IAACA,GDwB/B0E,iBAAkB,WCnBC,IAAC1E,EDmBKwE,ECnBK,CAC9B9E,KAAM+D,EACNgB,QAASzE,KDkBT2E,gBAAiB,WCfO,IAAC3E,EDeDwE,ECfW,CACnC9E,KAAMgE,EACNe,QAASzE,KDcT4E,mBAAoB,kBAAMJ,GCPQ,SAACA,GACnCA,EAAS,CAAC9E,KAAMkE,IAChBiB,MAAM,wCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIT,EAAS,CAAC9E,KAAMmE,EAA2BY,QAASQ,OACjEC,OAAM,SAAAX,GAAK,OAAIC,EAAS,CAAC9E,KAAMoE,EAA0BW,QAASF,cDqJxDR,EA/If,SAAa1D,GAAQ,IACXzB,EASEyB,EATFzB,UACAoF,EAQE3D,EARF2D,gBACAvD,EAOEJ,EAPFI,KACAyD,EAME7D,EANF6D,WACAC,EAKE9D,EALF8D,UACAC,EAIE/D,EAJF+D,gBACA7E,EAGEc,EAHFd,eACAmF,EAEErE,EAFFqE,iBACAC,EACEtE,EADFsE,gBATU,EAmBsBQ,mBAAS,GAnB/B,mBAmBXC,EAnBW,KAmBGC,EAnBH,KAqBlBC,qBAAU,WAMRjF,EAAMuE,uBACL,IAkBH,IAAMW,EAAc,SAACC,GACfA,GACFH,EAAgBD,EAAe,IAiB3BK,EAAoB7G,EAAU8G,QAAO,SAAA5G,GACjC,OAAOA,EAAQf,KAAKkE,cAAc0D,SAAS3B,EAAgB/B,kBAGrE,OACE,sBAAK7D,UAAW,KAAhB,UACE,oBAAIA,UAAW,KAAf,+BACA,qBAAIA,UAAW,KAAf,yBAAkCgH,KAClC,cAAC,EAAD,CACEtF,QAAS,UACTC,MAAO,QACPC,KAAMkE,EACNjE,SAAU,KACVC,QAAUwE,IAGVjE,EACA,gCACM,cAAC,EAAD,CACE7B,UAAYA,EACZ2B,MAAOqF,OAAOC,KAAKjH,EAAU,IAAI,GACjCsD,SAAUqD,IAEZ,cAAC,EAAD,CACE3G,UAAWA,EACX2B,MAAOqF,OAAOC,KAAKjH,EAAU,IAAI,GACjCsD,SAAUqD,IAEZ,cAACO,EAAD,CACElH,UAAWA,EACXsD,SAAUqD,IAEZ,gCACE,cAAC,EAAD,CACEzF,QAAS,UACTC,MAAO,QACPE,SAAU,KACVD,KAAMoE,EACNlE,QAAUyE,IAGRR,EACA,gCACI,cAAC,EAAD,CAAa5E,eAAgBA,EAAgBC,MAASwE,IACtD,qBAAK5F,UAAW,gCAAhB,SACE,cAAC,EAAD,CAAUQ,UAAW6G,SAI3B,8BAKZ,wBAGF,iCACE,sBAAKrH,UAAW,oCAAhB,UACE,qBAAKA,UAAW,MAAhB,SACI,mBAAG2H,KAAK,oCAAoCxE,OAAO,SAASyE,IAAI,sBAAhE,SAAsF,qBAAKC,OAAO,OAAOvH,IAAKwH,EAAQzH,IAAI,SAASJ,MAAO,CAAC8H,OAAQ,mBAEvJ,qBAAK/H,UAAW,MAAhB,SACI,mBAAG2H,KAAK,0CAA0CxE,OAAO,SAASyE,IAAI,sBAAtE,SAA4F,qBAAKC,OAAO,OAAOvH,IAAK0H,EAAI3H,IAAI,WAAWJ,MAAO,CAAC8H,OAAQ,mBAE3J,qBAAK/H,UAAW,MAAhB,SACI,mBAAG2H,KAAK,sCAAsCxE,OAAO,SAASyE,IAAI,sBAAlE,SAAwF,qBAAKC,OAAO,OAAOvH,IAAK2H,EAAS5H,IAAI,WAAWJ,MAAO,CAAC8H,OAAQ,mBAE5J,qBAAK/H,UAAW,MAAhB,SACI,mBAAG2H,KAAK,uCAAuCxE,OAAO,SAASyE,IAAI,sBAAnE,SAAyF,qBAAKC,OAAO,OAAOvH,IAAK4H,EAAO7H,IAAI,YAAYJ,MAAO,CAAC8H,OAAQ,8BElKzJI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,eCGRO,EAAqB,CACvB/C,gBAAiB,GACjBvD,MAAM,EACNyD,WAAY,OACZC,WAAW,EACXC,gBAAiB,iBACjBgB,aAAc,GAkCZ4B,EAAwB,CAC1B1C,WAAW,EACX1F,UAAW,GACX2F,MAAO,ICxCL0C,EAASC,yBACTC,EAAcC,YAAgB,CAACnD,gBDMN,WAA0C,IAAzCzD,EAAwC,uDAAlCuG,EAAoBM,EAAc,uDAAP,GAC7D,OAAOA,EAAO3H,MACV,KAAK8D,EACD,OAAO,2BAAKhD,GAAZ,IAAmBwD,gBAAiBqD,EAAO5C,UAE/C,KAAKhB,EACD,OAAO,2BACAjD,GADP,IAEIC,MAAOD,EAAMC,KACbyD,WAAY1D,EAAMC,KAAM,OAAQ,UAGxC,KAAKiD,EACD,OAAO,2BACAlD,GADP,IAEI2D,WAAY3D,EAAM2D,UAClBC,gBAAiB5D,EAAM2D,UAAW,iBAAmB,mBAG7D,KAAKR,EACD,OAAO,2BACAnD,GADP,IAEI4E,aAAc5E,EAAM4E,iBAG5B,QACI,OAAO5E,IChCmC6D,iBD0CtB,WAA6C,IAA5C7D,EAA2C,uDAArCwG,EAAuBK,EAAc,uDAAP,GACjE,OAAQA,EAAO3H,MACX,KAAKkE,EACD,OAAO,2BACApD,GADP,IAEI8D,WAAW,IAGnB,KAAKT,EACD,OAAO,2BACArD,GADP,IAEI5B,UAAWyI,EAAO5C,QAClBH,WAAW,IAGnB,KAAKR,EACD,OAAO,2BACAtD,GADP,IAEI+D,MAAO8C,EAAO5C,QACdH,WAAW,IAGvB,QACI,OAAO9D,MChET8G,EAAQC,YAAYJ,EAAaK,YAAgBC,IAAiBR,IAGxES,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAASA,EAAnB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BvB,M","file":"static/js/main.cf0a802f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ img, name, region, capital, languages, population}) => {\n    return(\n        <div \n            className={\"tc pa3 br3 grow shadow-3 tl w-100\"}\n            style={{\n                boxShadow: '0 0 1rem 0 rgba(0, 0, 0, .2)',\n                backgroundColor: 'rgba(255, 255, 255, .15)',\n                backdropFilter: 'blur(5px)'\n            }}\n        >\n            <img \n                className={'h4 w5 dib ba b--black-05 pa2'}\n                alt='flag' \n                src={img}\n            />\n            <h2 className={'tc'}>{name}</h2>\n            <hr className=\"mw3 bb bw1 b--black-10\"></hr>\n            <h3>Region: {region}</h3> \n            <h3>Capital: {capital}</h3>\n            <p>Languages: {languages}</p>\n            <p>Population: {population} people</p>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ countries }) => {\n    \n    return (\n        countries.map((country, i) => {\n            const languages = country.languages.map(item => ' ' + item.name).toString();\n            console.log('languages', languages)\n        return (\n            <div className={\"pa3 mr2\"} key={i}>\n                <Card \n                img={country.flag} \n                name={country.name} \n                region={country.region} \n                capital={country.capital.length === 0? \"N/A\" : country.capital }\n                languages={languages}\n                population={country.population}\n                />\n            </div>\n        )\n    })\n    )\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchField = ({ onValueEntered, value }) => {\n    return(\n        <div className={\"tc pa3\"}>\n\n            <input \n                className={\"ba tc br3 pa3\"}\n                style={{width: '300px'}}\n                type=\"text\" \n                placeholder=\"Enter a country name to see info\" \n                onChange = {onValueEntered}\n                value = {value}\n                />\n        </div>\n    )\n}\n\nexport default SearchField;","import React from 'react';\n\nconst Button = ({bgColor, color, text, textSize, width, onClick}) => {\n    return(\n        <button     \n            className={'ba br-pill ph4 pv3 mv2 dib shadow-3 grow self-center ' + color + ' ' + textSize}            \n                    style={{\n                        backgroundColor: bgColor, \n                        borderStyle: 'none',\n                        width: width\n                        }}\n            onClick = {onClick}>\n           {text}\n        </button>\n    )\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport Button from '../components/Button';\n\nclass GuessTheTopic extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomElement: '', \n            play: false,\n            guess: '',\n            guessEntered: false,\n            buttonPlayValue: '',\n            readOnly: false,\n            disabled: false,\n            giveUp: false\n        };\n      }\n\n      componentDidMount() {\n        const { countries, topic } = this.props;\n          this.setState({\n              randomElement: countries[Math.floor(Math.random() * countries.length)],\n              buttonPlayValue: `Guess the ${topic}`\n            })\n      }\n\n      handleClickPlay = () => {\n        const { topic } = this.props;\n        if (!this.state.play) {\n            this.setState({\n                play: true,\n                buttonPlayValue: `Close 'Guess the ${topic}'`\n            });\n            \n        } else {\n            this.setState({\n                play: false,\n                buttonPlayValue: `Guess the ${topic}`\n            })            \n          }                        \n      }\n\n      handleKeyDown = (event) => {\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            this.setState ({guessEntered: true, readOnly: true, disabled: true});\n            this.sendComponentScore(); \n        }\n      }\n\n      handleOkButton = (event) => {\n        this.setState ({guessEntered: true, readOnly: true, disabled: true});\n        this.sendComponentScore(); \n      }\n\n      onGuessEntered = (event) => {\n            this.setState ({guess: event.target.value});\n            // console.log('keys', Object.keys(this.state.randomElement))\n      }\n\n      wrongGuess = () => {\n        this.setState ({guessEntered: false, guess: '', disabled: false, readOnly: false,})\n      }\n\n      handleGiveUp = () => {\n          if (this.state.giveUp) {\n              this.setState({giveUp: false})\n          } else {\n            this.setState({giveUp: true})\n          }\n      }\n\n      newCountry = (array) => {\n        this.setState ({\n            guessEntered: false, \n            guess: '',\n            readOnly: false,\n            disabled: false,\n            randomElement: array[Math.floor(Math.random() * array.length)],\n\n        })\n      }\n\n      sendComponentScore = () => {\n       if (this.state.guess.toLowerCase()===this.state.randomElement[this.props.topic].toLowerCase()){\n                this.props.addScore(true);\n            } else {\n                this.props.addScore(false);\n            }\n      }\n\n    render() {\n       const { countries, topic } = this.props;\n       const { \n           randomElement, \n           play, \n           guess, \n           guessEntered, \n           buttonPlayValue, \n           readOnly,\n           disabled,\n           giveUp\n        } = this.state;\n        return(\n            <div className={\"tc mv3\"}>\n                <Button \n                    bgColor={'#a8eb12'}\n                    text={buttonPlayValue}\n                    textSize={'f3'}\n                    width={'300px'}\n                    onClick = {this.handleClickPlay}\n                    />                \n                {\n                    play? \n                    <div>\n                        <div className={'flex justify-center flex-column'}>\n                            <h2 className={'f3 tc mt2 mb3'}><span className={'ttc'}>{topic}</span> of <span className={'underline'}>{randomElement.name}</span>?</h2>\n                        </div>\n                        <input \n                            className={\"ba tc br-pill pa3\"}\n                            style={{width: '300px'}}\n                            type=\"text\" \n                            placeholder=\"Write your answer here\" \n                            onChange = {this.onGuessEntered}\n                            onKeyDown = {this.handleKeyDown}                        \n                            value = {guess}\n                            readOnly = {readOnly}\n                            disabled = {disabled}\n                            />\n                        <Button \n                            bgColor={'#00bf72'}\n                            text={`OK`}\n                            color={'white mh2'}\n                            textSize={'f5 b'}\n                            onClick = {() => this.handleOkButton()}\n                            />\n                        <Button \n                            bgColor={'#008793'}\n                            text={`Change country`}\n                            color={'white'}\n                            textSize={'f5 b'}\n                            onClick = {() => this.newCountry(countries)}\n                            />\n                        {\n                            guessEntered?\n                                (guess.toLowerCase()===randomElement[topic].toLowerCase()?\n                                    <div className={'flex justify-center flex-column'}>\n                                        <h2 className={'b mt3 mb2'}>BRAVO! That's right!</h2>  \n                                        <Button \n                                                bgColor={'#051937'}\n                                                text={`Play again!`}\n                                                color={'white'}\n                                                textSize={'b f5'}\n                                                onClick = {() => this.newCountry(countries)}\n                                            />                           \n                                    </div>\n                                    :\n                                    <div>\n                                        <div className={'flex justify-center'}>                                         \n                                            <Button \n                                                bgColor={'#04c3d1'}\n                                                text={`Try again!`}\n                                                color={'white'}\n                                                textSize={'b f5'}\n                                                onClick = {this.wrongGuess}\n                                            />\n                                            <Button \n                                                bgColor={'#0298a3'}\n                                                text={`Give Up`}\n                                                color={'white ml2'}\n                                                textSize={'f5 b'}\n                                                onClick = {this.handleGiveUp}\n                                            />\n                                        </div>     \n                                            {giveUp ?\n                                                <div className={'flex justify-center flex-column'}>\n                                                    <h3 className={'b mt2 mb3'}>The {topic} of {randomElement.name} is {randomElement[topic]}!</h3>\n                                                    <Button \n                                                        bgColor={'#051937'}\n                                                        text={`Play again!`}\n                                                        color={'white'}\n                                                        textSize={'f5'}\n                                                        onClick = {() => this.newCountry(countries)}\n                                                    /> \n                                                </div>\n                                                :<div></div>\n                                            }\n                                            \n                                    </div>)\n                                : <div> </div>\n                        }                        \n                    </div> \n                    :\n                    <div></div>\n                }\n             \n            </div>\n        )}\n    \n}\n\nexport default GuessTheTopic;","import React from 'react';\n\nconst Flag = ({randomCountry, disabled, onClick}) => {\n    return(\n        <button \n            className={'ba tc mv1 mh1 pa3 ph3 mid-gray'}\n            style={{\n                backgroundImage: `url(${randomCountry})`,\n                backgroundSize: 'cover', \n                backgroundPosition: 'center',\n                display: 'inline-block',\n                width: '200px',\n                color: 'rgba(0, 0, 0, 0)',\n                fontSize: '3em'\n                }}\n                onClick = {onClick}\n                disabled={disabled}\n            >\n        Flag\n        </button>\n    )\n}\n\nexport default Flag;","import React, { Component } from 'react';\nimport Button from '../components/Button';\nimport Flag from '../components/Flag';\n\nclass GuessTheTopic extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            randomArrayOf3: [],\n            randomElement: '', \n            play: false,\n            guess: '',\n            flagsDisplay: [],\n            guessEntered: false,\n            buttonPlayValue: '',\n            disabled: false\n        };\n      }\n\n      componentDidMount () {\n\n        const { countries } = this.props;\n        this.setState({\n            randomArrayOf3: [countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)]],\n            buttonPlayValue: `Guess the Flag`\n        })\n      }\n\n      handleClickPlay = (arrayOf3) => {\n        if (!this.state.play) {\n            this.setState({\n                play: true,\n                randomElement: arrayOf3[Math.floor(Math.random() * arrayOf3.length)],\n                buttonPlayValue: `Close 'Guess the Flag'`\n            })            \n        } else {\n            this.setState({\n                play: false,\n                buttonPlayValue: `Guess the Flag`\n            })            \n          }            \n      }\n\n      newPick = (arrayOf3) => {\n        this.setState({\n            play: true,\n            randomElement: arrayOf3[Math.floor(Math.random() * arrayOf3.length)],\n            disabled: false\n        })\n     }\n\n      handleMouseClick = (answer) => {\n            this.setState ({guess: answer});\n            this.sendComponentScore(answer.flag);\n      }\n\n      picturesDisplay = (array) => {\n\n        const randomFlagArray = [];\n\n        randomFlagArray[0] = array[Math.floor(Math.random() * array.length)];\n        \n        array.forEach(item => {\n            if (item !== randomFlagArray[0]) {\n                randomFlagArray[1] = item;\n            }\n        });\n\n        array.forEach(item => {\n            if (item !== randomFlagArray[0] && item !== randomFlagArray[1]) \n                randomFlagArray[2] = item\n        });\n        \n            this.setState ({flagsDisplay: randomFlagArray}) ;\n        }\n\n        wrongAnswer = () => {\n            this.setState({guess: '', disabled: false})\n      }\n\n      playAgain = (countries) => {\n        this.setState({\n            randomArrayOf3: [countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)],\n                            countries[Math.floor(Math.random() * countries.length)]],\n            guess: '',\n            disabled: false\n        })\n      }\n\n      sendComponentScore = (answer) => {\n          console.log('flag co', answer, this.state.randomElement.flag)\n        this.setState({disabled: true})\n        if (answer===this.state.randomElement.flag) {\n                 this.props.addScore(true);\n             } else {\n                 this.props.addScore(false);\n             }\n       }\n\n    render() {\n       const { countries } = this.props;\n       const { \n           randomElement, \n           play, \n           guess, \n           randomArrayOf3, \n           flagsDisplay, \n           buttonPlayValue,\n           disabled\n        } = this.state;\n       console.log('random of array 3:', randomArrayOf3)\n\n        return(\n            <div className={\"tc mv3\"}>\n                <Button \n                    bgColor={'#a8eb12'}\n                    text={buttonPlayValue}\n                    textSize={'f3'}\n                    width={'300px'}\n                    onClick= {() => {this.handleClickPlay(randomArrayOf3); this.picturesDisplay(randomArrayOf3)}}\n                    />\n                {/* <button \n                    className={'link dim br-pill ph3 pv3 mb2 dib shadow-3'}\n                    style={{\n                        fontSize: '1.5em', \n                        borderStyle: 'none', \n                        backgroundColor: '#a8eb12',\n                        width: '300px'\n                        }}\n                    onClick = {() => {this.handleClickPlay(randomArrayOf3); this.picturesDisplay(randomArrayOf3)}}>\n                    {buttonPlayValue}\n                </button> */}\n                {\n                    play? \n                    <div>                        \n                        <h2 className={'f3 tc mv2'}>Flag of <span className={'underline'}>{randomElement.name}?</span></h2>                        \n                        <div className={'pa3'}>\n                            <Flag \n                                randomCountry={flagsDisplay[0].flag}\n                                onClick = {() => this.handleMouseClick(flagsDisplay[0])}\n                                disabled={disabled}\n                            />\n                            <Flag \n                                randomCountry={flagsDisplay[1].flag}\n                                onClick = {() => this.handleMouseClick(flagsDisplay[1])}\n                                disabled={disabled}\n                            />\n                            <Flag \n                                randomCountry={flagsDisplay[2].flag}\n                                onClick = {() => this.handleMouseClick(flagsDisplay[2])}\n                                disabled={disabled}\n                            />                        \n                            <div>\n                            <Button \n                                bgColor={'#008793'}\n                                color={'white'}\n                                text={`Don't know. Reload`}\n                                textSize={'f5'}\n                                onClick = {() => {\n                                    this.playAgain(countries); \n                                    this.newPick(randomArrayOf3); \n                                    this.picturesDisplay(randomArrayOf3);}\n                                    }\n                                />\n                            </div>\n                        </div>\n                        {\n                            guess?\n                                (guess.flag===randomElement.flag ?\n                                    <div className={'flex justify-center flex-column'}>\n                                        <h2 className={'f3 b mv2'}>BRAVO! That's right!</h2>\n                                        <Button \n                                            bgColor={'#051937'}\n                                            text={`Play Again`}\n                                            color={'white'}\n                                            textSize={'f5'}\n                                            onClick = {() => {\n                                                this.playAgain(countries); \n                                                this.newPick(randomArrayOf3); \n                                                this.picturesDisplay(randomArrayOf3);}\n                                                }\n                                            />\n                                    </div>\n                                    :\n                                    <div className={'flex justify-center flex-column'}>\n                                            <h2 className={'b f3 b mv2'}>Keep trying! That's the flag of <span className={'underline'}>{guess.name}!</span></h2>\n                                            <Button \n                                                bgColor={'#051937'}\n                                                text={`Try Again`}\n                                                color={'white'}\n                                                textSize={'f5'}\n                                                onClick = {this.wrongAnswer}\n                                            />\n                                    </div>)\n                                : <div></div>\n                        }\n                    </div> \n                    :\n                    <div></div>\n                }\n                \n            </div>\n        )\n        }\n    \n}\n\nexport default GuessTheTopic;","export default __webpack_public_path__ + \"static/media/github.d1bb13ce.svg\";","export default __webpack_public_path__ + \"static/media/fb.d1e12fbb.png\";","export default __webpack_public_path__ + \"static/media/insta.9094474d.png\";","export default __webpack_public_path__ + \"static/media/twitter.a429d008.png\";","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const PLAY = 'PLAY';\nexport const SHOW_CARDS = 'SHOW_CARDS';\nexport const GENERAL_SCORE = 'GENERAL_SCORE';\nexport const REQUEST_COUNTRIES_PENDING = 'REQUEST_COUNTRIES_PENDING';\nexport const REQUEST_COUNTRIES_SUCCESS = 'REQUEST_COUNTRIES_SUCCESS';\nexport const REQUEST_COUNTRIES_FAILED = 'REQUEST_COUNTRIES_FAILED';","import React, { useState ,useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchField from '../components/SearchField';\nimport GuessTheTopic from './GuessTheTopic';\nimport GuessFlag from './GuessFlag'\nimport Button from '../components/Button';\n\nimport github from \"../img/github.svg\"; \nimport fb from \"../img/fb.png\"; \nimport insta from \"../img/insta.png\"; \nimport twitter from \"../img/twitter.png\"; \n\nimport './App.css';\n\nimport { setSearchedCountry, setPlay, setShowCards, requestCountries } from '../actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchedCountry: state.searchCountries.searchedCountry,\n    play: state.searchCountries.play,\n    playButton: state.searchCountries.playButton,\n    showCards: state.searchCountries.showCards,\n    showCardsButton: state.searchCountries.showCardsButton,\n    \n    countries: state.requestCountries.countries,\n    isPending: state.requestCountries.isPending,\n    error: state.requestCountries.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onValueEntered: (event) => dispatch(setSearchedCountry(event.target.value)),\n    handlePlayButton: () => {dispatch(setPlay())},\n    handleShowCards: () => {dispatch(setShowCards())},\n    onRequestCountries: () => dispatch(requestCountries())\n  }\n}\n\nfunction App(props) {\n  const { countries,\n          searchedCountry, \n          play, \n          playButton,\n          showCards,\n          showCardsButton,\n          onValueEntered, \n          handlePlayButton, \n          handleShowCards,\n        } = props;\n\n  // moving state into actions and reducer\n  // const [countries, setCountries] = useState([]);\n  // const [searchedCountry, setSearchedCountry] = useState('');\n  // const [play, setPlay] = useState(false);\n  // const [playButton, setPlayButton] = useState('PLAY');\n  // const [showCards, setShowCards] = useState(false);\n  // const [showCardsButton, setShowCardsButton] = useState('SHOW COUNTRIES');\n  const [generalScore, setGeneralScore] = useState(0);\n\n  useEffect(() => {\n    // moving to actions and reducer\n    // console.log(props.store.getState());\n    // fetch('https://restcountries.eu/rest/v2/all')\n    // .then(response => response.json())\n    // .then(result => setCountries(result))\n    props.onRequestCountries()   \n  }, [])\n\n  // moving to actions and reducer\n  // const onValueEntered = (event) => {\n  //   setSearchedCountry(event.target.value);\n  // }\n\n  // moving to actions and reducer\n  // const handlePlayButton = () => {\n  //   if (play) {\n  //     setPlay(false);\n  //     setPlayButton('PLAY'); \n  //   } else {\n  //     setPlay(true);\n  //     setPlayButton('CLOSE');\n  //     }    \n  // }\n  \n  const updateScore = (componentScore) => {\n    if (componentScore) {\n      setGeneralScore(generalScore + 1)\n    }\n  }\n  \n  // moving to actions and reducer\n  // const handleShowCards = () => {\n  //   if (!showCards) {\n  //     setShowCards(true);\n  //     setShowCardsButton('HIDE COUNTRIES');\n  //   } else {\n  //     setShowCards(false);\n  //     setShowCardsButton('SHOW COUNTRIES');\n  //   }\n    \n  // }\n\n  \n    const filteredCountries = countries.filter(country => {\n              return country.name.toLowerCase().includes(searchedCountry.toLowerCase())\n            })    \n\n    return (\n      <div className={'tc'}>\n        <h1 className={'tc'}>Countries Quizzes</h1>\n        <h2 className={'f2'}>Your score: {generalScore}</h2>\n        <Button \n          bgColor={'#051937'}\n          color={'white'}\n          text={playButton}\n          textSize={'f2'}\n          onClick= {handlePlayButton}\n        />\n        {\n          play?\n          <div>\n                <GuessTheTopic \n                  countries= {countries} \n                  topic={Object.keys(countries[0])[5]}    \n                  addScore={updateScore}              \n                  />              \n                <GuessTheTopic \n                  countries={countries} \n                  topic={Object.keys(countries[0])[7]} \n                  addScore={updateScore}                    \n                  /> \n                <GuessFlag \n                  countries={countries} \n                  addScore={updateScore}                      \n                />              \n                <div>\n                  <Button \n                    bgColor={'#051937'}\n                    color={'white'}\n                    textSize={'f3'}\n                    text={showCardsButton}\n                    onClick= {handleShowCards}\n                  />\n                    {\n                      showCards? \n                      <div>\n                          <SearchField onValueEntered={onValueEntered} value = {searchedCountry} />\n                          <div className={'flex justify-center flex-wrap'}>\n                            <CardList countries={filteredCountries}/>\n                          </div>\n                      </div>\n                      :\n                      <div></div>\n                    }\n                </div>                \n          </div>\n          :\n          <div></div>\n        }\n                \n        <footer>\n          <div className={'flex justify-center items-end mt4'}>\n            <div className={'ph2'}>\n                <a href=\"https://www.github.com/andragh83/\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={github} alt=\"github\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            <div className={'ph2'}>\n                <a href=\"https://www.facebook.com/andraghstudio/\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={fb} alt=\"facebook\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            <div className={'ph2'}>\n                <a href=\"https://twitter.com/andraghitulescu\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={twitter} alt=\"facebook\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            <div className={'ph2'}>\n                <a href=\"https://www.instagram.com/andragh83/\" target=\"_blank\" rel=\"noopener noreferrer\"><img height=\"30px\" src={insta} alt=\"instagram\" style={{margin: \"10px auto\"}}/></a>\n            </div>\n            </div>\n        </footer> \n\n      </div>\n    );\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { \n    CHANGE_SEARCH_FIELD, \n    PLAY, \n    SHOW_CARDS, \n    GENERAL_SCORE,\n    REQUEST_COUNTRIES_PENDING,\n    REQUEST_COUNTRIES_SUCCESS,\n    REQUEST_COUNTRIES_FAILED\n } from './constants.js';\n\nexport const setSearchedCountry = (text) => ({\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n})\n\nexport const setPlay = (text) => ({\n    type: PLAY,\n    payload: text\n})\n\nexport const setShowCards = (text) => ({\n    type: SHOW_CARDS,\n    payload: text\n})\n\nexport const setGeneralScore = () => ({\n    type: GENERAL_SCORE\n})\n\nexport const requestCountries = () => (dispatch) => {\n    dispatch({type: REQUEST_COUNTRIES_PENDING});\n    fetch('https://restcountries.eu/rest/v2/all')\n    .then(response => response.json())\n    .then(data => dispatch({type: REQUEST_COUNTRIES_SUCCESS, payload: data})) \n    .catch(error => dispatch({type: REQUEST_COUNTRIES_FAILED, payload: error}))\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \n        CHANGE_SEARCH_FIELD, \n        PLAY, \n        SHOW_CARDS, \n        GENERAL_SCORE,\n        REQUEST_COUNTRIES_PENDING,\n        REQUEST_COUNTRIES_SUCCESS,\n        REQUEST_COUNTRIES_FAILED\n     } from './constants.js';\n\nconst initialStateSearch = {\n    searchedCountry: '',\n    play: false,\n    playButton: 'PLAY',\n    showCards: false,\n    showCardsButton: 'SHOW COUNTRIES',\n    generalScore: 0,\n}\n\n\nexport const searchCountries = (state=initialStateSearch, action={}) => {\n    switch(action.type) {\n        case CHANGE_SEARCH_FIELD:{\n            return { ...state, searchedCountry: action.payload};\n        }\n        case PLAY:{ \n            return { \n                ...state, \n                play: !state.play, \n                playButton: state.play? 'PLAY': 'CLOSE'\n                }\n            }\n        case SHOW_CARDS:{\n            return {\n                ...state,\n                showCards: !state.showCards,\n                showCardsButton: state.showCards? 'Show Countries' : 'Hide Countries'\n                }\n            }\n        case GENERAL_SCORE: {\n            return {\n                ...state,\n                generalScore: state.generalScore++\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nconst initialStateCountries = {\n    isPending: false,\n    countries: [],\n    error: ''\n}\n\nexport const requestCountries = (state=initialStateCountries, action={}) => {\n    switch (action.type) {\n        case REQUEST_COUNTRIES_PENDING: {\n            return {\n                ...state,\n                isPending: true\n            }\n        }\n        case REQUEST_COUNTRIES_SUCCESS: {\n            return {\n                ...state,\n                countries: action.payload,\n                isPending: false,\n            }\n        }\n        case REQUEST_COUNTRIES_FAILED: {\n            return {\n                ...state,\n                error: action.payload,\n                isPending: false\n            }\n        }\n    default: \n        return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport { searchCountries, requestCountries } from './reducers';\n\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchCountries, requestCountries})\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}