{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchField.js","components/Button.js","containers/GuessTheTopic.js","components/Flag.js","containers/GuessFlag.js","img/github.svg","img/fb.png","img/insta.png","img/twitter.png","constants.js","components/fadeInWrapper.js","components/blinkWrapper.js","containers/App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["Card","img","name","region","capital","languages","population","className","style","boxShadow","backgroundColor","backdropFilter","alt","src","CardList","countries","map","country","i","Object","entries","value","push","flags","svg","common","length","SearchField","onValueEntered","width","type","placeholder","onChange","Button","bgColor","color","text","textSize","onClick","borderStyle","GuessTheTopic","props","handleClickPlay","topic","state","play","setState","buttonPlayValue","handleKeyDown","event","key","keyCode","guessEntered","readOnly","disabled","sendComponentScore","handleOkButton","onGuessEntered","guess","target","wrongGuess","handleGiveUp","giveUp","newCountry","array","randomElement","Math","floor","random","console","log","toLowerCase","addScore","this","textTransform","onKeyDown","Component","Flag","randomCountry","backgroundImage","backgroundSize","backgroundPosition","display","fontSize","arrayOf3","newPick","handleMouseClick","answer","picturesDisplay","randomFlagArray","forEach","item","flagsDisplay","wrongAnswer","playAgain","randomArrayOf3","flag","CHANGE_SEARCH_FIELD","PLAY","SHOW_CARDS","GENERAL_SCORE","REQUEST_COUNTRIES_PENDING","REQUEST_COUNTRIES_SUCCESS","REQUEST_COUNTRIES_FAILED","FadeInWrapper","children","BlinkWrapper","connect","searchedCountry","searchCountries","playButton","showCards","showCardsButton","requestCountries","error","isPending","dispatch","payload","handlePlayButton","handleShowCards","onRequestCountries","fetch","then","response","json","data","catch","useState","generalScore","setGeneralScore","useEffect","updateScore","componentScore","filteredCountries","Array","isArray","filter","includes","message","keys","GuessFlag","paddingTop","paddingBottom","fontWeight","href","rel","height","github","margin","fb","twitter","insta","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateCountries","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f621e61.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ img, name, region, capital, languages, population}) => {\n    return(\n        <div \n            className={\"tc pa3 br3 grow shadow-3 tl w-100\"}\n            style={{\n                boxShadow: '0 0 1rem 0 rgba(0, 0, 0, .2)',\n                backgroundColor: 'rgba(255, 255, 255, .15)',\n                backdropFilter: 'blur(5px)'\n            }}\n        >\n            <img \n                className={'h4 w5 dib ba b--black-05 pa2'}\n                alt='flag' \n                src={img}\n            />\n            <h2 className={'tc'}>{name}</h2>\n            <hr className=\"mw3 bb bw1 b--black-10\"></hr>\n            <h3>Region: {region}</h3> \n            <h3>Capital: {capital}</h3>\n            <p>Languages: {languages}</p>\n            <p>Population: {population} people</p>\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ countries }) => {\n  return countries.map((country, i) => {\n    const languages = [];\n    if (country.languages) {\n      for (const [key, value] of Object.entries(country.languages)) {\n        languages.push(`${value}, `);\n        //   console.log(`${key}: ${value}`);\n      }\n    }\n\n    return (\n      <div className={\"pa3 mr2\"} key={i}>\n        <Card\n          img={country.flags.svg}\n          name={country.name.common}\n          region={country.region}\n          capital={\n            country.capital && country.capital.length === 0\n              ? \"N/A\"\n              : country.capital\n          }\n          languages={languages}\n          population={country.population}\n        />\n      </div>\n    );\n  });\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchField = ({ onValueEntered, value }) => {\n    return(\n        <div className={\"tc pa3\"}>\n\n            <input \n                className={\"ba tc br3 pa3\"}\n                style={{width: '300px'}}\n                type=\"text\" \n                placeholder=\"Enter a country name to see info\" \n                onChange = {onValueEntered}\n                value = {value}\n                />\n        </div>\n    )\n}\n\nexport default SearchField;","import React from 'react';\n\nconst Button = ({bgColor, color, text, textSize, width, onClick}) => {\n    return(\n        <button     \n            className={'ba br-pill ph4 pv3 mv2 dib shadow-3 grow self-center ' + color + ' ' + textSize}            \n                    style={{\n                        backgroundColor: bgColor, \n                        borderStyle: 'none',\n                        width: width\n                        }}\n            onClick = {onClick}>\n           {text}\n        </button>\n    )\n}\n\nexport default Button;","import React, { Component } from \"react\";\nimport Button from \"../components/Button\";\n\nclass GuessTheTopic extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      randomElement: \"\",\n      play: false,\n      guess: \"\",\n      guessEntered: false,\n      buttonPlayValue: \"\",\n      readOnly: false,\n      disabled: false,\n      giveUp: false,\n    };\n  }\n\n  componentDidMount() {\n    const { countries, topic } = this.props;\n    this.setState({\n      randomElement: countries[Math.floor(Math.random() * countries.length)],\n      buttonPlayValue: `Guess the ${topic}`,\n    });\n  }\n\n  handleClickPlay = () => {\n    const { topic } = this.props;\n    if (!this.state.play) {\n      this.setState({\n        play: true,\n        buttonPlayValue: `Close 'Guess the ${topic}'`,\n      });\n    } else {\n      this.setState({\n        play: false,\n        buttonPlayValue: `Guess the ${topic}`,\n      });\n    }\n  };\n\n  handleKeyDown = (event) => {\n    if (event.key === \"Enter\" || event.keyCode === 13) {\n      this.setState({ guessEntered: true, readOnly: true, disabled: true });\n      this.sendComponentScore();\n    }\n  };\n\n  handleOkButton = (event) => {\n    this.setState({ guessEntered: true, readOnly: true, disabled: true });\n    this.sendComponentScore();\n  };\n\n  onGuessEntered = (event) => {\n    this.setState({ guess: event.target.value });\n    // console.log('keys', Object.keys(this.state.randomElement))\n  };\n\n  wrongGuess = () => {\n    this.setState({\n      guessEntered: false,\n      guess: \"\",\n      disabled: false,\n      readOnly: false,\n    });\n  };\n\n  handleGiveUp = () => {\n    if (this.state.giveUp) {\n      this.setState({ giveUp: false });\n    } else {\n      this.setState({ giveUp: true });\n    }\n  };\n\n  newCountry = (array) => {\n    this.setState({\n      guessEntered: false,\n      guess: \"\",\n      readOnly: false,\n      disabled: false,\n      randomElement: array[Math.floor(Math.random() * array.length)],\n    });\n  };\n\n  sendComponentScore = () => {\n    const { topic } = this.props;\n    console.log(\"topic\", topic);\n    console.log(\n      \"this.state.guess.toLowerCase()\",\n      this.state.guess.toLowerCase()\n    );\n    console.log(\n      \"this.state.randomElement[this.props.topic].toLowerCase()\",\n      this.state.randomElement[this.props.topic].toLowerCase()\n    );\n    if (\n      (topic === \"capital\" &&\n        this.state.guess.toLowerCase() ===\n          this.state.randomElement[this.props.topic][0].toLowerCase()) ||\n      (topic === \"region\" &&\n        this.state.guess.toLowerCase() ===\n          this.state.randomElement[this.props.topic].toLowerCase())\n    ) {\n      this.props.addScore(true);\n    } else {\n      this.props.addScore(false);\n    }\n  };\n\n  render() {\n    const { countries, topic } = this.props;\n    const {\n      randomElement,\n      play,\n      guess,\n      guessEntered,\n      buttonPlayValue,\n      readOnly,\n      disabled,\n      giveUp,\n    } = this.state;\n\n    console.log(\"random Element\", randomElement);\n    return (\n      <div className={\"tc mv3\"}>\n        <Button\n          bgColor={\"#a8eb12\"}\n          text={buttonPlayValue}\n          textSize={\"f3\"}\n          width={\"300px\"}\n          onClick={this.handleClickPlay}\n        />\n        {play ? (\n          <div>\n            <div className={\"flex justify-center flex-column\"}>\n              <h2 className={\"f3 tc mt2 mb3\"}>\n                <span className={\"ttc\"}>{topic}</span> of{\" \"}\n                <span className={\"underline\"}>{randomElement.name.common}</span>\n                ?\n              </h2>\n            </div>\n            <input\n              className={\"ba tc br-pill pa3\"}\n              style={{ width: \"300px\", textTransform: \"capitalize\" }}\n              type=\"text\"\n              placeholder=\"Write your answer here\"\n              onChange={this.onGuessEntered}\n              onKeyDown={this.handleKeyDown}\n              value={guess}\n              readOnly={readOnly}\n              disabled={disabled}\n            />\n            <Button\n              bgColor={\"#00bf72\"}\n              text={`OK`}\n              color={\"white mh2\"}\n              textSize={\"f5 b\"}\n              onClick={() => this.handleOkButton()}\n            />\n            <Button\n              bgColor={\"#008793\"}\n              text={`Change country`}\n              color={\"white\"}\n              textSize={\"f5 b\"}\n              onClick={() => this.newCountry(countries)}\n            />\n            {guessEntered ? (\n              (topic === \"capital\" &&\n                this.state.guess.toLowerCase() ===\n                  this.state.randomElement[\n                    this.props.topic\n                  ][0].toLowerCase()) ||\n              (topic === \"region\" &&\n                this.state.guess.toLowerCase() ===\n                  this.state.randomElement[this.props.topic].toLowerCase()) ? (\n                <div className={\"flex justify-center flex-column\"}>\n                  <h2 className={\"b mt3 mb2\"}>BRAVO! That's right!</h2>\n                  <Button\n                    bgColor={\"#051937\"}\n                    text={`Play again!`}\n                    color={\"white\"}\n                    textSize={\"b f5\"}\n                    onClick={() => this.newCountry(countries)}\n                  />\n                </div>\n              ) : (\n                <div>\n                  <div className={\"flex justify-center\"}>\n                    <Button\n                      bgColor={\"#04c3d1\"}\n                      text={`Try again!`}\n                      color={\"white\"}\n                      textSize={\"b f5\"}\n                      onClick={this.wrongGuess}\n                    />\n                    <Button\n                      bgColor={\"#0298a3\"}\n                      text={`Give Up`}\n                      color={\"white ml2\"}\n                      textSize={\"f5 b\"}\n                      onClick={this.handleGiveUp}\n                    />\n                  </div>\n                  {giveUp ? (\n                    <div className={\"flex justify-center flex-column\"}>\n                      <h3 className={\"b mt2 mb3\"}>\n                        The {topic} of {randomElement.name.common} is{\" \"}\n                        {randomElement[topic]}!\n                      </h3>\n                      <Button\n                        bgColor={\"#051937\"}\n                        text={`Play again!`}\n                        color={\"white\"}\n                        textSize={\"f5\"}\n                        onClick={() => this.newCountry(countries)}\n                      />\n                    </div>\n                  ) : (\n                    <div></div>\n                  )}\n                </div>\n              )\n            ) : (\n              <div> </div>\n            )}\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default GuessTheTopic;\n","import React from 'react';\n\nconst Flag = ({randomCountry, disabled, onClick}) => {\n    return(\n        <button \n            className={'ba tc mv1 mh1 pa3 ph3 mid-gray'}\n            style={{\n                backgroundImage: `url(${randomCountry})`,\n                backgroundSize: 'cover', \n                backgroundPosition: 'center',\n                display: 'inline-block',\n                width: '200px',\n                color: 'rgba(0, 0, 0, 0)',\n                fontSize: '3em'\n                }}\n                onClick = {onClick}\n                disabled={disabled}\n            >\n        Flag\n        </button>\n    )\n}\n\nexport default Flag;","import React, { Component } from \"react\";\nimport Button from \"../components/Button\";\nimport Flag from \"../components/Flag\";\n\nclass GuessTheTopic extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      randomArrayOf3: [],\n      randomElement: \"\",\n      play: false,\n      guess: \"\",\n      flagsDisplay: [],\n      guessEntered: false,\n      buttonPlayValue: \"\",\n      disabled: false,\n    };\n  }\n\n  componentDidMount() {\n    const { countries } = this.props;\n    this.setState({\n      randomArrayOf3: [\n        countries[Math.floor(Math.random() * countries.length)],\n        countries[Math.floor(Math.random() * countries.length)],\n        countries[Math.floor(Math.random() * countries.length)],\n      ],\n      buttonPlayValue: `Guess the Flag`,\n    });\n  }\n\n  handleClickPlay = (arrayOf3) => {\n    if (!this.state.play) {\n      this.setState({\n        play: true,\n        randomElement: arrayOf3[Math.floor(Math.random() * arrayOf3.length)],\n        buttonPlayValue: `Close 'Guess the Flag'`,\n      });\n    } else {\n      this.setState({\n        play: false,\n        buttonPlayValue: `Guess the Flag`,\n      });\n    }\n  };\n\n  newPick = (arrayOf3) => {\n    this.setState({\n      play: true,\n      randomElement: arrayOf3[Math.floor(Math.random() * arrayOf3.length)],\n      disabled: false,\n    });\n  };\n\n  handleMouseClick = (answer) => {\n    this.setState({ guess: answer });\n    this.sendComponentScore(answer.flags.svg);\n  };\n\n  picturesDisplay = (array) => {\n    const randomFlagArray = [];\n\n    randomFlagArray[0] = array[Math.floor(Math.random() * array.length)];\n\n    array.forEach((item) => {\n      if (item !== randomFlagArray[0]) {\n        randomFlagArray[1] = item;\n      }\n    });\n\n    array.forEach((item) => {\n      if (item !== randomFlagArray[0] && item !== randomFlagArray[1])\n        randomFlagArray[2] = item;\n    });\n\n    this.setState({ flagsDisplay: randomFlagArray });\n  };\n\n  wrongAnswer = () => {\n    this.setState({ guess: \"\", disabled: false });\n  };\n\n  playAgain = (countries) => {\n    this.setState({\n      randomArrayOf3: [\n        countries[Math.floor(Math.random() * countries.length)],\n        countries[Math.floor(Math.random() * countries.length)],\n        countries[Math.floor(Math.random() * countries.length)],\n      ],\n      guess: \"\",\n      disabled: false,\n    });\n  };\n\n  sendComponentScore = (answer) => {\n    console.log(\"flag co\", answer, this.state.randomElement.flag);\n    this.setState({ disabled: true });\n    if (answer === this.state.randomElement.flags.svg) {\n      this.props.addScore(true);\n    } else {\n      this.props.addScore(false);\n    }\n  };\n\n  render() {\n    const { countries } = this.props;\n    const {\n      randomElement,\n      play,\n      guess,\n      randomArrayOf3,\n      flagsDisplay,\n      buttonPlayValue,\n      disabled,\n    } = this.state;\n    console.log(\"random of array 3:\", randomArrayOf3);\n\n    return (\n      <div className={\"tc mv3\"}>\n        <Button\n          bgColor={\"#a8eb12\"}\n          text={buttonPlayValue}\n          textSize={\"f3\"}\n          width={\"300px\"}\n          onClick={() => {\n            this.handleClickPlay(randomArrayOf3);\n            this.picturesDisplay(randomArrayOf3);\n          }}\n        />\n        {/* <button \n                    className={'link dim br-pill ph3 pv3 mb2 dib shadow-3'}\n                    style={{\n                        fontSize: '1.5em', \n                        borderStyle: 'none', \n                        backgroundColor: '#a8eb12',\n                        width: '300px'\n                        }}\n                    onClick = {() => {this.handleClickPlay(randomArrayOf3); this.picturesDisplay(randomArrayOf3)}}>\n                    {buttonPlayValue}\n                </button> */}\n        {play ? (\n          <div>\n            <h2 className={\"f3 tc mv2\"}>\n              Flag of{\" \"}\n              <span className={\"underline\"}>{randomElement.name.common}?</span>\n            </h2>\n            <div className={\"pa3\"}>\n              <Flag\n                randomCountry={flagsDisplay[0].flags.svg}\n                onClick={() => this.handleMouseClick(flagsDisplay[0])}\n                disabled={disabled}\n              />\n              <Flag\n                randomCountry={flagsDisplay[1].flags.svg}\n                onClick={() => this.handleMouseClick(flagsDisplay[1])}\n                disabled={disabled}\n              />\n              <Flag\n                randomCountry={flagsDisplay[2].flags.svg}\n                onClick={() => this.handleMouseClick(flagsDisplay[2])}\n                disabled={disabled}\n              />\n              <div>\n                <Button\n                  bgColor={\"#008793\"}\n                  color={\"white\"}\n                  text={`Don't know. Reload`}\n                  textSize={\"f5\"}\n                  onClick={() => {\n                    this.playAgain(countries);\n                    this.newPick(randomArrayOf3);\n                    this.picturesDisplay(randomArrayOf3);\n                  }}\n                />\n              </div>\n            </div>\n            {guess ? (\n              guess.flags.svg === randomElement.flags.svg ? (\n                <div className={\"flex justify-center flex-column\"}>\n                  <h2 className={\"f3 b mv2\"}>BRAVO! That's right!</h2>\n                  <Button\n                    bgColor={\"#051937\"}\n                    text={`Play Again`}\n                    color={\"white\"}\n                    textSize={\"f5\"}\n                    onClick={() => {\n                      this.playAgain(countries);\n                      this.newPick(randomArrayOf3);\n                      this.picturesDisplay(randomArrayOf3);\n                    }}\n                  />\n                </div>\n              ) : (\n                <div className={\"flex justify-center flex-column\"}>\n                  <h2 className={\"b f3 b mv2\"}>\n                    Keep trying! That's the flag of{\" \"}\n                    <span className={\"underline\"}>{guess.name.common}!</span>\n                  </h2>\n                  <Button\n                    bgColor={\"#051937\"}\n                    text={`Try Again`}\n                    color={\"white\"}\n                    textSize={\"f5\"}\n                    onClick={this.wrongAnswer}\n                  />\n                </div>\n              )\n            ) : (\n              <div></div>\n            )}\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default GuessTheTopic;\n","export default __webpack_public_path__ + \"static/media/github.d1bb13ce.svg\";","export default __webpack_public_path__ + \"static/media/fb.d1e12fbb.png\";","export default __webpack_public_path__ + \"static/media/insta.9094474d.png\";","export default __webpack_public_path__ + \"static/media/twitter.a429d008.png\";","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const PLAY = 'PLAY';\nexport const SHOW_CARDS = 'SHOW_CARDS';\nexport const GENERAL_SCORE = 'GENERAL_SCORE';\nexport const REQUEST_COUNTRIES_PENDING = 'REQUEST_COUNTRIES_PENDING';\nexport const REQUEST_COUNTRIES_SUCCESS = 'REQUEST_COUNTRIES_SUCCESS';\nexport const REQUEST_COUNTRIES_FAILED = 'REQUEST_COUNTRIES_FAILED';","import React from \"react\";\nimport \"./animationStyle.css\";\n\nconst FadeInWrapper = ({ children }) => {\n  return <div className=\"fadeInClass\">{children}</div>;\n};\n\nexport default FadeInWrapper;\n","import React from \"react\";\nimport \"./animationStyle.css\";\n\nconst BlinkWrapper = ({ children }) => {\n  return <span className=\"blink\">{children}</span>;\n};\n\nexport default BlinkWrapper;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport CardList from \"../components/CardList\";\nimport SearchField from \"../components/SearchField\";\nimport GuessTheTopic from \"./GuessTheTopic\";\nimport GuessFlag from \"./GuessFlag\";\nimport Button from \"../components/Button\";\n\nimport github from \"../img/github.svg\";\nimport fb from \"../img/fb.png\";\nimport insta from \"../img/insta.png\";\nimport twitter from \"../img/twitter.png\";\n\nimport \"./App.css\";\n\nimport {\n  setSearchedCountry,\n  setPlay,\n  setShowCards,\n  requestCountries,\n} from \"../actions\";\nimport FadeInWrapper from \"../components/fadeInWrapper\";\nimport BlinkWrapper from \"../components/blinkWrapper\";\n\nconst mapStateToProps = (state) => {\n  return {\n    searchedCountry: state.searchCountries.searchedCountry,\n    play: state.searchCountries.play,\n    playButton: state.searchCountries.playButton,\n    showCards: state.searchCountries.showCards,\n    showCardsButton: state.searchCountries.showCardsButton,\n    countries: state.requestCountries.countries,\n    error: state.requestCountries.error,\n    isPending: state.requestCountries.isPending,\n    error: state.requestCountries.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onValueEntered: (event) => dispatch(setSearchedCountry(event.target.value)),\n    handlePlayButton: () => {\n      dispatch(setPlay());\n    },\n    handleShowCards: () => {\n      dispatch(setShowCards());\n    },\n    onRequestCountries: () => dispatch(requestCountries()),\n  };\n};\n\nfunction App(props) {\n  const {\n    countries,\n    searchedCountry,\n    play,\n    playButton,\n    showCards,\n    showCardsButton,\n    onValueEntered,\n    handlePlayButton,\n    handleShowCards,\n    error,\n  } = props;\n\n  // moving state into actions and reducer\n  // const [countries, setCountries] = useState([]);\n  // const [searchedCountry, setSearchedCountry] = useState('');\n  // const [play, setPlay] = useState(false);\n  // const [playButton, setPlayButton] = useState('PLAY');\n  // const [showCards, setShowCards] = useState(false);\n  // const [showCardsButton, setShowCardsButton] = useState('SHOW COUNTRIES');\n  const [generalScore, setGeneralScore] = useState(0);\n\n  useEffect(() => {\n    // moving to actions and reducer\n    // console.log(props.store.getState());\n    // fetch('https://restcountries.eu/rest/v2/all')\n    // .then(response => response.json())\n    // .then(result => setCountries(result))\n    props.onRequestCountries();\n  }, []);\n\n  // moving to actions and reducer\n  // const onValueEntered = (event) => {\n  //   setSearchedCountry(event.target.value);\n  // }\n\n  // moving to actions and reducer\n  // const handlePlayButton = () => {\n  //   if (play) {\n  //     setPlay(false);\n  //     setPlayButton('PLAY');\n  //   } else {\n  //     setPlay(true);\n  //     setPlayButton('CLOSE');\n  //     }\n  // }\n\n  const updateScore = (componentScore) => {\n    if (componentScore) {\n      setGeneralScore(generalScore + 1);\n    }\n  };\n\n  // moving to actions and reducer\n  // const handleShowCards = () => {\n  //   if (!showCards) {\n  //     setShowCards(true);\n  //     setShowCardsButton('HIDE COUNTRIES');\n  //   } else {\n  //     setShowCards(false);\n  //     setShowCardsButton('SHOW COUNTRIES');\n  //   }\n\n  // }\n\n  const filteredCountries =\n    countries && Array.isArray(countries)\n      ? countries.filter((country) => {\n          return country.name.common\n            .toLowerCase()\n            .includes(searchedCountry.toLowerCase());\n        })\n      : [];\n\n  console.log(\"countries\", countries);\n\n  return (\n    <div className={\"tc\"}>\n      <h1 className={\"tc\"}>Countries Game</h1>\n      <h2 className={\"f2\"}>Your score: {generalScore}</h2>\n\n      {countries && !countries.message && countries[0] ? (\n        <>\n          <FadeInWrapper>\n            <Button\n              bgColor={\"#051937\"}\n              color={\"white\"}\n              text={playButton}\n              textSize={\"f2\"}\n              onClick={handlePlayButton}\n            />\n          </FadeInWrapper>\n\n          {play ? (\n            <div>\n              <GuessTheTopic\n                countries={countries}\n                topic={Object.keys(countries[0])[11]}\n                addScore={updateScore}\n              />\n              <GuessTheTopic\n                countries={countries}\n                topic={Object.keys(countries[0])[13]}\n                addScore={updateScore}\n              />\n              <GuessFlag countries={countries} addScore={updateScore} />\n              <div>\n                <Button\n                  bgColor={\"#051937\"}\n                  color={\"white\"}\n                  textSize={\"f3\"}\n                  text={showCardsButton}\n                  onClick={handleShowCards}\n                />\n                {showCards ? (\n                  <div>\n                    <SearchField\n                      onValueEntered={onValueEntered}\n                      value={searchedCountry}\n                    />\n                    <div className={\"flex justify-center flex-wrap\"}>\n                      <CardList countries={countries && filteredCountries} />\n                    </div>\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </>\n      ) : error || countries.message ? (\n        <div\n          style={{\n            paddingTop: \"20px\",\n            paddingBottom: \"20px\",\n            fontSize: \"20px\",\n            fontWeight: \"bold\",\n          }}\n        >\n          &#127758; We couldn't load game data, please try again later &#127758;\n        </div>\n      ) : (\n        <div\n          style={{\n            paddingTop: \"20px\",\n            paddingBottom: \"20px\",\n            fontSize: \"20px\",\n          }}\n        >\n          Loading countries... <BlinkWrapper>&#127758;</BlinkWrapper>\n        </div>\n      )}\n\n      <footer>\n        <div className={\"flex justify-center items-end mt4\"}>\n          <div className={\"ph2\"}>\n            <a\n              href=\"https://www.github.com/andragh83/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                height=\"30px\"\n                src={github}\n                alt=\"github\"\n                style={{ margin: \"10px auto\" }}\n              />\n            </a>\n          </div>\n          <div className={\"ph2\"}>\n            <a\n              href=\"https://www.facebook.com/andraghstudio/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                height=\"30px\"\n                src={fb}\n                alt=\"facebook\"\n                style={{ margin: \"10px auto\" }}\n              />\n            </a>\n          </div>\n          <div className={\"ph2\"}>\n            <a\n              href=\"https://twitter.com/andraghitulescu\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                height=\"30px\"\n                src={twitter}\n                alt=\"facebook\"\n                style={{ margin: \"10px auto\" }}\n              />\n            </a>\n          </div>\n          <div className={\"ph2\"}>\n            <a\n              href=\"https://www.instagram.com/andragh83/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                height=\"30px\"\n                src={insta}\n                alt=\"instagram\"\n                style={{ margin: \"10px auto\" }}\n              />\n            </a>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  PLAY,\n  SHOW_CARDS,\n  GENERAL_SCORE,\n  REQUEST_COUNTRIES_PENDING,\n  REQUEST_COUNTRIES_SUCCESS,\n  REQUEST_COUNTRIES_FAILED,\n} from \"./constants.js\";\n\nexport const setSearchedCountry = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text,\n});\n\nexport const setPlay = (text) => ({\n  type: PLAY,\n  payload: text,\n});\n\nexport const setShowCards = (text) => ({\n  type: SHOW_CARDS,\n  payload: text,\n});\n\nexport const setGeneralScore = () => ({\n  type: GENERAL_SCORE,\n});\n\nexport const requestCountries = () => (dispatch) => {\n  dispatch({ type: REQUEST_COUNTRIES_PENDING });\n  fetch(\"https://restcountries.com/v3.1/all\")\n    .then((response) => response.json())\n    .then((data) =>\n      dispatch({ type: REQUEST_COUNTRIES_SUCCESS, payload: data })\n    )\n    .catch((error) =>\n      dispatch({ type: REQUEST_COUNTRIES_FAILED, payload: error })\n    );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \n        CHANGE_SEARCH_FIELD, \n        PLAY, \n        SHOW_CARDS, \n        GENERAL_SCORE,\n        REQUEST_COUNTRIES_PENDING,\n        REQUEST_COUNTRIES_SUCCESS,\n        REQUEST_COUNTRIES_FAILED\n     } from './constants.js';\n\nconst initialStateSearch = {\n    searchedCountry: '',\n    play: false,\n    playButton: 'PLAY',\n    showCards: false,\n    showCardsButton: 'SHOW COUNTRIES',\n    generalScore: 0,\n}\n\n\nexport const searchCountries = (state=initialStateSearch, action={}) => {\n    switch(action.type) {\n        case CHANGE_SEARCH_FIELD:{\n            return { ...state, searchedCountry: action.payload};\n        }\n        case PLAY:{ \n            return { \n                ...state, \n                play: !state.play, \n                playButton: state.play? 'PLAY': 'CLOSE'\n                }\n            }\n        case SHOW_CARDS:{\n            return {\n                ...state,\n                showCards: !state.showCards,\n                showCardsButton: state.showCards? 'Show Countries' : 'Hide Countries'\n                }\n            }\n        case GENERAL_SCORE: {\n            return {\n                ...state,\n                generalScore: state.generalScore++\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nconst initialStateCountries = {\n    isPending: false,\n    countries: [],\n    error: ''\n}\n\nexport const requestCountries = (state=initialStateCountries, action={}) => {\n    switch (action.type) {\n        case REQUEST_COUNTRIES_PENDING: {\n            return {\n                ...state,\n                isPending: true\n            }\n        }\n        case REQUEST_COUNTRIES_SUCCESS: {\n            return {\n                ...state,\n                countries: action.payload,\n                isPending: false,\n            }\n        }\n        case REQUEST_COUNTRIES_FAILED: {\n            return {\n                ...state,\n                error: action.payload,\n                isPending: false\n            }\n        }\n    default: \n        return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport { searchCountries, requestCountries } from './reducers';\n\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchCountries, requestCountries})\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}